@import "variables";
@import "mixins";
@import "animations";

html,
body {
	font-family: 'Atlas Typewriter Web', monospace;
	font-size: 20px;
	line-height: 2;
	animation: fontsize 25s linear infinite alternate;
}

.container {
	padding: 2em 6em;
	max-width: 56em;
	word-wrap: break-word;
}

@media screen and (max-width: 1000px) {
	html,
	body {
		font-size: 18px;
	}

	.container {
		padding-left: 4em;
		padding-right: 4em;
	}
}

@media screen and (max-width: 700px) {
	.container {
		padding-left: 2em;
		padding-right: 2em;
	}
}

@media screen and (max-width: 500px) {
	html,
	body {
		font-size: 14px;
	}
}

@media screen and (max-width: 400px) {
	.container {
		padding: 1em;
	}
}

.clicker {
	@include resetAppearance;
	position: fixed;
	z-index: 1;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	height: 100%;
	width: 100%;

	cursor: auto;
}

a {
	position: relative;
	z-index: 2;
}

.background {
	position: fixed;
	z-index: -1;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	animation: glitch 500ms linear backwards;

	html:hover &,
	.clicker:active + & {
		animation: none;
	}

	&:before {
		content: '';
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		z-index: 1;
		background-color: #ffffff;

		animation: turnoff 2000ms steps(1) forwards;
	}
}

.fade {
	animation: fadein 2.5s linear;
}

section {
	margin: 5em 0;
}

h1 {
	font-size: 5em;
	font-weight: 100;
	height: 2em;
	position: relative;

	& > span {
		display: block;
		position: absolute;
		top: 0;
		left: 0;

		& > span {
			opacity: 0;
		}

		$timing: 2000ms;
		$count: 12;

		@include stutter($timing);

		&:nth-child(1) {
			font-weight: 100;
			font-style: normal;
			@include stagger($count, (0 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(2) {
			font-weight: 100;
			font-style: italic;
			@include stagger($count, (1 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(3) {
			font-weight: 300;
			font-style: normal;
			@include stagger($count, (2 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(4) {
			font-weight: 300;
			font-style: italic;
			@include stagger($count, (3 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(5) {
			font-weight: 400;
			font-style: normal;
			@include stagger($count, (4 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(6) {
			font-weight: 400;
			font-style: italic;
			@include stagger($count, (5 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(7) {
			font-weight: 500;
			font-style: normal;
			@include stagger($count, (6 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(8) {
			font-weight: 500;
			font-style: italic;
			@include stagger($count, (7 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(9) {
			font-weight: 700;
			font-style: normal;
			@include stagger($count, (8 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(10) {
			font-weight: 700;
			font-style: italic;
			@include stagger($count, (9 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(11) {
			font-weight: 900;
			font-style: normal;
			@include stagger($count, (10 * ($timing / $count)), ($timing / $count));
		}
		&:nth-child(12) {
			font-weight: 900;
			font-style: italic;
			@include stagger($count, (11 * ($timing / $count)), ($timing / $count));
		}
	}
}

h2 {
	font-size: 0.75em;
	font-weight: 500;
	letter-spacing: 0.2em;
	text-transform: uppercase;
	margin: 2em 0;

	&:after {
		content: '';
		display: block;
		margin-bottom: -0.1em;
	}
}

ul {
	li {
		margin: 1em 0;

		h3,
		p {
			margin: 0;
		}

		p,
		a {
			font-size: 0.75em;
		}

		h3 {
			line-height: 1;
			margin-bottom: 0.2em;
		}

		h3 em {
			font-style: normal;
			font-size: 0.75em;
		}
	}
}

p:hover {
	@include jitter(40, 40ms, true);
}

a {
	color: inherit;
	text-decoration: none;
	border-bottom: 4px solid $yellow;

	&:hover {
		border-left: 2em solid $yellow;
		font-style: italic;
	}
}

@import "modules/font_loader";